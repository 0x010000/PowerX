syntax = "v1"

info(
    title: "活动管理"
    desc: "活动管理"
    author: "Eros"
    email: "smoke.mvp@gmail.com"
    version: "v1"
)

@server(
    group: admin/scene/active
    prefix: /api/v1/admin/scene/active
    middleware: EmployeeJWTAuth
)

service PowerX {
    @doc "活动列表/page"
    @handler ListSceneActivitiesPage
    post /page (ActivitiesListRequest) returns (ActivitiesListReply)

    @doc "创建活动"
    @handler CreateSceneActivities
    post /create (ActionActiveRequest) returns (StateReply)

    @doc "更新活动"
    @handler UpdateSceneActivities
    patch /update/:aid (ActionActiveRequest) returns (StateReply)

    @doc "场景码列表/option"
    @handler ListSceneQrcodeOption
    post /qrcode/options (SceneQrcodeRequest) returns (SceneQrcodeOptionReply)
}





type (
    ActivitiesListRequest {
        Name string `json:"name,optional"`
        State int `json:"state,optional"`
        PageIndex int `form:"pageIndex,optional"`
        PageSize int `form:"pageSize,optional"`
    }

    ActivitiesListReply {
        List []*Active `json:"list"`
        PageIndex int `json:"pageIndex"`
        PageSize int `json:"pageSize"`
        Total int64 `json:"total"`
    }

    Active struct {
        Activities Activities `json:"activities"`                                                                                        // 活动信息
        ActivitiesPoster Poster `json:"activitiesPoster"`                                                                                // 活动海报
        ActivitiesSceneQrcode []*ActivitiesQrcode `json:"activitiesSceneQrcode"`                                                         // 活动场景码
        ActivitiesParticipants Participants `json:"activitiesParticipants"`                                                              // 参与概况
        ActivitiesContent interface{} `json:"ActivitiesContent"`                                                                         // 活动内容
    }

    Activities struct {
        Id int `json:"id"`                                              // 主键
        Aid uint64 `json:"aid"`                                         // 活动ID
        Name string `json:"name"`                                       // 活动名称
        Desc string `json:"desc"`                                       // 描述
        Owner []string `json:"owner"`                                   // 负责人
        StartTime string `json:"startTime"`                             // 开始时间
        EndTime string `json:"endTime"`                                 // 结束时间
        ClassifyId int `json:"classifyId"`                              // 活动分类
        ActivitiesContentId int `json:"activitiesContentId"`            // 活动内容ID
        State int `json:"state"`                                        // 活动状态; 1:未开始 2::进行中 3:已结束  [5:上架 6:下架]
    }
    Poster struct {
        PhotoState bool `json:"photoState"`                                                    // 是否启用头像
        AliseState bool `json:"AliseState"`                                                    // 是否启用昵称
        CoverLink string `json:"coverLink"`                                                    // 活动封面Link
        Link string `json:"link"`                                                              // 落地页(场景落地页;其他落地页)
        Position []string `json:"position"`                                                    // 落地页二维码位置100,200
    }

    Participants struct {
        EnterGroupNumber int `json:"enterGroupNumber"` // 进群人数
        DoneTaskNumber int `json:"doneTaskNumber"`     // 完成任务人数
    }
)


type (
    ActionActiveRequest struct {
        Aid uint64 `path:"aid,optional"`                                            // aid
        Activities ActionActivities `json:"activities"`
        ActionPoster ActionPoster `json:"activitiesPoster"`
        ActionSceneQrcode []ActivitiesQrcode `json:"activitiesSceneQrcode"`
    }

    ActionActivities struct {

        Name string `json:"name"`                                                   // 活动名称
        Desc string `json:"desc,optional"`                                          // 描述
        Owner []string `json:"owner,optional"`                                      // 负责人
        StartTime int64 `json:"startTime"`                                          // 开始时间
        EndTime int64 `json:"endTime"`                                              // 结束时间
        ClassifyId int `json:"classifyId,optional"`                                 // 活动分类
        ActivitiesContentId int `json:"activitiesContentId,optional"`               // 活动内容ID
    }
    ActionPoster struct {
        PhotoState bool `json:"photoState,optional"`                                                    // 是否启用头像
        AliseState bool `json:"AliseState,optional"`                                                    // 是否启用昵称
        CoverLink string `json:"coverLink,optional"`                                                    // 活动封面Link
        Link string `json:"link,optional"`                                                              // 落地页(场景落地页;其他落地页)
        Position []string `json:"position,optional"`                                                    // 落地页二维码位置100,200
    }
)

type (
    ActivitiesQrcode struct {
        Qid string `json:"qid,optional"`   // 场景码Code
        Link string `json:"link,optional"` // 场景码Link
    }

    StateReply {
        Status string `json:"status"`
    }

    SceneQrcodeOptionReply struct {
        List []*SceneQrcode `json:"list"`
    }

    SceneQrcodeRequest struct {
        Qid string `json:"qid,optional"`
        Owner string `json:"owner,optional"`
        ClassifyId int `json:"classifyId,optional"`
        Name string `json:"name,optional"`
    }

    SceneQrcode struct {
        Qid string `json:"qid"`                           // 场景码Code
        Name string `json:"name"`
        RealQrcodeLink string `json:"realQrcodeLink"`     // 真实码
        Platform int `json:"platform"`
        ActiveQrcodeLink string `json:"activeQrcodeLink"` // 场景码
        State int `json:"state"`
    }
)
