// Code generated by goctl. DO NOT EDIT.
package types

type GetCustomerRequest struct {
	Id int64 `path:"id"`
}

type GetCustomerReply struct {
	Id int64 `json:"id"`
}

type DepartmentNode struct {
	Id       int64            `json:"id"`
	DepName  string           `json:"depName"`
	Leaders  []SimpleEmployee `json:"leaders"`
	Children []DepartmentNode `json:"children"`
}

type GetDepartmentTreeRequest struct {
	DepId int64 `path:"depId"`
}

type GetDepartmentTreeReply struct {
	DepTree DepartmentNode `json:"depTree"`
}

type CreateDepartmentRequest struct {
	DepName   string  `json:"depName"`
	LeaderIds []int64 `json:"leaderIds"`
	PId       int64   `json:"pId"`
	Desc      string  `json:"desc"`
}

type CreateDepartmentReply struct {
	Id int64 `json:"id"`
}

type SimpleEmployee struct {
	Id   int64  `json:"id"`
	Name string `json:"name"`
}

type SimpleDepartment struct {
	Id      int64  `json:"id"`
	DepName string `json:"depName"`
}

type SimpleRole struct {
	RoleCode string `json:"roleCode"`
	RoleName string `json:"roleName"`
}

type GetEmployeeRequest struct {
	Id int64 `path:"id"`
}

type GetEmployeeReply struct {
	Id int64 `json:"id"`
}

type ListEmployeesRequest struct {
	Ids             []int64  `form:"ids,optional"`
	LikeName        string   `form:"likeName,optional"`
	LikeEmail       string   `form:"likeEmail,optional"`
	DepIds          []int64  `form:"depIds,optional"`
	Positions       []string `form:"positions,optional"`
	LikePhoneNumber string   `form:"likePhoneNumber,optional"`
	RoleCodes       []string `form:"roleCodes,optional"`
	IsEnabled       *bool    `form:"isEnable,optional"`
	PageIndex       int      `form:"pageIndex,optional"`
	PageSize        int      `form:"pageSize,optional"`
}

type Employee struct {
	Id            int64              `json:"id"`
	Name          string             `json:"name"`
	Email         string             `json:"email"`
	MobilePhone   string             `json:"mobilePhone"`
	Gender        int8               `json:"gender"`
	NickName      string             `json:"nickName,optional"`
	Desc          string             `json:"desc,optional"`
	Avatar        string             `json:"avatar,optional"`
	ExternalEmail string             `json:"externalEmail,optional"`
	Deps          []SimpleDepartment `json:"deps"`
	Roles         []string           `json:"roles"`
	Position      string             `json:"position"`
	JobTitle      string             `json:"jobTitle"`
	IsEnabled     bool               `json:"isEnabled"`
	CreatedAt     string             `json:"createdAt"`
}

type ListEmployeesReply struct {
	List      []Employee `json:"list"`
	PageIndex int        `json:"pageIndex"`
	PageSize  int        `json:"pageSize"`
	Total     int64      `json:"total"`
}

type SyncEmployeesRequest struct {
	Source string `path:"source"`
	Target string `path:"target"`
}

type SyncEmployeesReply struct {
	Status bool `json:"status"`
}

type CreateEmployeeRequest struct {
	Account       string  `json:"account"`
	Name          string  `json:"name"`
	NickName      string  `json:"nickName,optional"`
	Desc          string  `json:"desc,optional"`
	Email         string  `json:"email"`
	Avatar        string  `json:"avatar,optional"`
	ExternalEmail string  `json:"externalEmail,optional"`
	MobilePhone   string  `json:"mobilePhone,optional"`
	Gender        *int8   `json:"gender,optional"`
	DepIds        []int64 `json:"depIds"`
	Position      string  `json:"position,optional"`
	JobTitle      string  `json:"jobTitle,optional"`
	Password      string  `json:"password,optional"`
}

type CreateEmployeeReply struct {
	Id int64 `json:"id"`
}

type UpdateEmployeeRequest struct {
	Id            int64   `path:"id"`
	Name          string  `json:"name,optional"`
	NickName      string  `json:"nickName,optional"`
	Desc          string  `json:"desc,optional"`
	Email         string  `json:"email,optional"`
	Avatar        string  `json:"avatar,optional"`
	ExternalEmail string  `json:"externalEmail,optional"`
	MobilePhone   string  `json:"mobilePhone,optional"`
	Gender        *int8   `json:"gender,optional"`
	DepIds        []int64 `json:"depIds,optioanl"`
	Position      string  `json:"position,optional"`
	JobTitle      string  `json:"jobTitle,optional"`
	Password      string  `json:"password,optional"`
	Status        *int8   `json:"status,optional"`
}

type UpdateEmployeeReply struct {
	*Employee
}

type GetEmployeeOptionsRequest struct {
	Scopes []string `form:"scopes,options=position|role|department,optional"`
}

type GetEmployeeOptionsReply struct {
	Positions   []string           `json:"positions"`
	Roles       []SimpleRole       `json:"roles"`
	Departments []SimpleDepartment `json:"departments"`
}

type DeleteEmployeeRequest struct {
	Id int64 `path:"id"`
}

type DeleteEmployeeReply struct {
	Id int64 `json:"id"`
}

type AuthRole struct {
	RoleCode   string `json:"roleCode"`
	Name       string `json:"name"`
	Desc       string `json:"desc"`
	IsReserved bool   `json:"isReserved"`
}

type ListRolesReply struct {
	List []AuthRole `json:"list"`
}

type CreateRoleRequest struct {
	RoleCode string `json:"roleCode"`
	Name     string `json:"name"`
	Desc     string `json:"desc"`
}

type CreateRoleReply struct {
	RoleCode string `json:"roleCode"`
}

type AuthResAct struct {
	ResCode string `json:"resCode"`
	Action  string `json:"action"`
	Desc    string `json:"desc"`
}

type AuthRes struct {
	ResCode string       `json:"resCode"`
	ResName string       `json:"resName"`
	Type    string       `json:"type"`
	Desc    string       `json:"desc"`
	Acts    []AuthResAct `json:"acts"`
}

type ListRecoursesReply struct {
	List []AuthRes `json:"list"`
}

type AssignResAct struct {
	ResCode string `json:"resCode"`
	Action  string `json:"action"`
}

type RoleAssignRes struct {
	RoleCodes []string       `json:"roleCodes"`
	Acts      []AssignResAct `json:"acts"`
	IsReplace bool           `json:"isReplace"`
}

type UsersAssignRes struct {
	UserIds   []int64  `json:"userIds"`
	RoleCodes []string `json:"roleCodes"`
	IsReplace bool     `json:"isReplace"`
}

type AssignAuthRequest struct {
	UserAssignRes *UsersAssignRes `json:"userAssignRes,optional"`
	RoleAssignRes *RoleAssignRes  `json:"roleAssignRes,optional"`
}

type LoginRequest struct {
	UserName    string `json:"userName,optional"`
	PhoneNumber string `json:"phoneNumber,optional"`
	Email       string `json:"email,optional"`
	Password    string `json:"password"`
}

type LoginReply struct {
	Token string `json:"token"`
}

type LiveQRCodeWebForm struct {
	Url string `json:"url"`
}

type LiveQRCodeWeWorkContactMeForm struct {
	Typ          string   `json:"typ,options=SINGLE|MULTI"`
	Remark       string   `json:"remark"`
	IsSkipVerify bool     `json:"isSkipVerify"`
	State        string   `json:"state"`
	Users        []string `json:"user"`
}

type LiveQRCodeWeWorkGroupChatForm struct {
	Remark         string   `json:"remark"`
	IsFullCreate   bool     `json:"isFullCreate"`
	CreateBaseName string   `json:"createBaseName"`
	CreateBaseId   int      `json:"createBaseId"`
	ChatIdList     []string `json:"chatIdList"`
	State          string   `json:"state"`
}

type CreateLiveQRCodeRequest struct {
	Name            string                        `json:"name"`
	Desc            string                        `json:"desc"`
	Type            string                        `json:"type,options=WEB|WEWORK_CONTACT_ME|WEWORK_GROUP_CHAT"`
	Web             LiveQRCodeWebForm             `json:"web,optional"`
	WeWorkContactMe LiveQRCodeWeWorkContactMeForm `json:"weWorkContactMe,optional"`
	WeWorkGroupChat LiveQRCodeWeWorkGroupChatForm `json:"weWorkGroupChat,optional"`
	IconUrl         string                        `json:"iconUrl,optional"`
}

type CreateLiveQRCodeReply struct {
	Uri     string `json:"url"`
	IconUrl string `json:"iconUrl"`
}

type ListLiveQRCodeRequest struct {
	Type     string  `json:"type,options=WEB|WEWORK_CONTACT_ME|WEWORK_GROUP_CHAT,optional"`
	CreateBy []int64 `json:"createBy,optional"`
}

type LiveQRCodeItem struct {
	Uri     string `json:"url"`
	IconUrl string `json:"iconUrl"`
}

type ListLiveQRCodeReply struct {
	List      LiveQRCodeItem `json:"list"`
	PageIndex int            `json:"pageIndex"`
	PageSize  int            `json:"pageSize"`
	Total     int64          `json:"total"`
}

type AccessLiveQRCodeRequest struct {
	Uid string `path:"uid"`
}

type AccessLiveQRCodeReply struct {
	RedirectTo string `json:"redirectTo"`
}
