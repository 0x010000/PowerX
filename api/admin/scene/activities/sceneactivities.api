syntax = "v1"

info(
    title: "活动管理"
    desc: "活动管理"
    author: "Eros"
    email: "smoke.mvp@gmail.com"
    version: "v1"
)

@server(
    group: admin/scene/active
    prefix: /api/v1/admin/scene/active
    //middleware: EmployeeJWTAuth
)

service PowerX {

    @doc "活动列表/page"
    @handler ListSceneActivitiesPage
    post /page (ActivitiesListRequest) returns (ActivitiesListReply)

    @doc "创建活动"
    @handler CreateSceneActivities
    post /create (ActionActivities) returns (StateReply)

    @doc "更新活动"
    @handler UpdateSceneActivities
    patch /update (ActionActivities) returns (StateReply)

}





type (
    ActivitiesListRequest {
        Name string `json:"name,optional"`
        State int `json:"state,optional"`
        PageIndex int `form:"pageIndex,optional"`
        PageSize int `form:"pageSize,optional"`
    }

    ActivitiesListReply {
        List []*Activities `json:"list"`
        PageIndex int `json:"pageIndex"`
        PageSize int `json:"pageSize"`
        Total int64 `json:"total"`
    }

    Activities struct {
        Id int `json:"id"`                       // 主键
        Aid string `json:"aid"`                  // 活动ID
        Name string `json:"name"`                // 活动名称
        Desc string `json:"desc"`                // 描述
        Owner []string `json:"owner"`            // 负责人
        StartTime time.Time `json:"startTime"`   // 开始时间
        EndTime time.Time `json:"endTime"`       // 结束时间
        ClassifyId int `json:"classifyId"`       // 活动分类
        SceneId int `json:"sceneId"`             // 活动场景ID
        CoverLink string `json:"coverLink"`      // 活动封面Link
        Link string `json:"link"`                // 落地页(场景落地页;其他落地页)
        State int `json:"state"`                 // 活动状态; 1:进行中 2:已结束 [5:上架 6:下架]
        Group Group `json:"group"`               // 群信息
        Content interface{} `json:"content"`     // 内容
    }

    Group struct {
        EnterGroupNumber int `json:"enterGroupNumber"` // 进群人数
        DoneTaskNumber int `json:"doneTaskNumber"`     // 完成任务人数
    }
)


type (
    ActionActivities struct {
        Id int `json:"id,optional"`                       // 主键
        Name string `json:"name"`                         // 活动名称
        Desc string `json:"desc",optional`                // 描述
        Owner []string `json:"owner",optional`            // 负责人
        StartTime time.Time `json:"startTime"`            // 开始时间
        EndTime time.Time `json:"endTime"`                // 结束时间
        ClassifyId int `json:"classifyId",optional`       // 活动分类
        SceneId int `json:"sceneId",optional`             // 活动场景ID
        CoverLink string `json:"coverLink,optional"`      // 活动封面Link
        Link string `json:"link,optional"`                // 落地页(场景落地页;其他落地页)
    }
)

type (
    StateReply {
        Status string `json:"status"`
    }
)
